"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4148],{1916:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var i=s(4848),t=s(8453);const r={},o="Definitions",d={id:"introduction/definitions",title:"Definitions",description:"- network: A set of nodes and links between them",source:"@site/docs/introduction/definitions.md",sourceDirName:"introduction",slug:"/introduction/definitions",permalink:"/introduction/definitions",draft:!1,unlisted:!1,editUrl:"https://github.com/cunicu/gont/tree/main/docs/website/docs/introduction/definitions.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/introduction/"},next:{title:"Namespaces",permalink:"/introduction/namespaces"}},c={},a=[{value:"Relationships",id:"relationships",level:2},{value:"Gont and Namespaces",id:"gont-and-namespaces",level:2}];function l(n){const e={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"definitions",children:"Definitions"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"network"}),": A set of ",(0,i.jsx)(e.em,{children:"nodes"})," and ",(0,i.jsx)(e.em,{children:"links"})," between them"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"node"}),": A network namespace which represents any device in the ",(0,i.jsx)(e.em,{children:"network"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"link"}),": A pair of ",(0,i.jsx)(e.code,{children:"veth"})," network interfaces which are associated to separate ",(0,i.jsx)(e.em,{children:"nodes"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"interface"}),": an endpoint with one or more assigned IP addresses"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"switch"}),": A ",(0,i.jsx)(e.em,{children:"node"})," containing a Linux layer 2 bridge and attached ",(0,i.jsx)(e.em,{children:"interfaces"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"host"}),": A ",(0,i.jsx)(e.em,{children:"node"})," with several configured ",(0,i.jsx)(e.em,{children:"interfaces"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"router"}),": A ",(0,i.jsx)(e.em,{children:"host"})," with IP forwarding enabled"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"nat"}),": A special type of ",(0,i.jsx)(e.em,{children:"router"})," which implements network address translation between a set of south- and north-bound ",(0,i.jsx)(e.em,{children:"interfaces"})]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"relationships",children:"Relationships"}),"\n",(0,i.jsx)(e.mermaid,{value:'classDiagram\n    direction BT\n\n    class Network {\n        Nodes []Node\n        Links []Link\n    }\n\n    class Link {\n        Left Endpoint\n        Right Endpoint\n    }\n\n    class Interface {\n        Name string\n        Node Node\n\n        Addresses []net.IPNet\n    }\n\n    class Namespace {\n        NsFd int\n        Run()\n    }\n\n    class Node {\n        Name string\n    }\n\n    class Host {\n        Interfaces []Interface\n        AddInterface()\n    }\n\n    class Switch {\n        Ports []Port\n        AddPort()\n    }\n\n    class Router {\n        AddRoute()\n    }\n\n    class NAT {\n\n    }\n            \n    Node *-- Namespace\n    Host *-- Node\n    Router *-- Host\n    NAT *-- Router\n    Switch *-- Node\n\n    Interface "1" o-- "1" Node\n\n\n    Link "1" o-- "2" Interface\n\n    Network "1" o-- "*" Link\n    Network "1" o-- "*" Node'}),"\n",(0,i.jsx)(e.h2,{id:"gont-and-namespaces",children:"Gont and Namespaces"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["for each ",(0,i.jsx)(e.em,{children:"node"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"a separate network namespace"}),"\n",(0,i.jsxs)(e.li,{children:["a separate uts namespace","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["for a unique hostname within each ",(0,i.jsx)(e.em,{children:"node"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["for each ",(0,i.jsx)(e.em,{children:"network"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["a separate mount namespace","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["for a unique ",(0,i.jsx)(e.code,{children:"/etc/hosts"})," files between ",(0,i.jsx)(e.em,{children:"networks"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>d});var i=s(6540);const t={},r=i.createContext(t);function o(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);